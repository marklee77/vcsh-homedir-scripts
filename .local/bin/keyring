#!/usr/bin/env python
import gnomekeyring as gk
import sys

from argparse import ArgumentParser
from getpass import getpass


def main(argv=None):

    parser = ArgumentParser(description='gnome keyring utility')
    parser.add_argument('action', help='action to perform',
                        choices=['get', 'set', 'set-ssh'])
    parser.add_argument('service', help='service name')
    parser.add_argument('user', help='user name')

    args = parser.parse_args()

    keyring = 'login'
    attrs = {'service': args.service, 'user': args.user}

    if args.action == 'get':
        try:
            result_list = gk.find_items_sync(gk.ITEM_GENERIC_SECRET, attrs)
            print [result.secret for result in result_list][0]
        except gk.NoMatchError:
            pass
    elif args.action == 'set':
        name = "'{user}' on '{service}'".format(**attrs)
        secret = getpass("Enter password for {}: ".format(name))
        try:
            result_list = gk.find_items_sync(gk.ITEM_GENERIC_SECRET, attrs)
            gk.item_delete_sync(keyring,
                                [result.item_id for result in result_list][0])
        except gk.NoMatchError:
            pass
        gk.item_create_sync(keyring, gk.ITEM_GENERIC_SECRET,
                            name, attrs, secret, True)
    elif args.action == 'set-ssh':
        name = "Unlock password for: {}".format(args.user)
        attrs = {'unique': 'ssh-store:{}'.format(args.service)}
        secret = getpass("Enter unlock password for {}: ".format(args.user))
        try:
            result_list = gk.find_items_sync(gk.ITEM_GENERIC_SECRET, attrs)
            gk.item_delete_sync(keyring,
                                [result.item_id for result in result_list][0])
        except gk.NoMatchError:
            pass
        gk.item_create_sync(keyring, gk.ITEM_GENERIC_SECRET,
                            name, attrs, secret, True)

    return 0


if __name__ == "__main__":
    sys.exit(main(sys.argv))
